{
  "name": "WhatsApp Webhook - Evolution API",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "webhook/whatsapp",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Webhook WhatsApp",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "whatsapp-webhook"
    },
    {
      "parameters": {
        "jsCode": "// Validar dados recebidos\nconst { tarefa, funcionario, mensagem, telefone } = $input.first().json;\n\n// Validar campos obrigatórios\nif (!telefone || !mensagem) {\n  throw new Error('Telefone e mensagem são obrigatórios');\n}\n\n// Formatar telefone (remover caracteres especiais)\nconst telefoneFormatado = telefone.replace(/[^0-9]/g, '');\n\n// Validar formato do telefone\nif (telefoneFormatado.length < 10 || telefoneFormatado.length > 13) {\n  throw new Error('Formato de telefone inválido');\n}\n\n// Preparar dados para Evolution API\nreturn {\n  json: {\n    tarefa,\n    funcionario,\n    mensagem,\n    telefone: telefoneFormatado,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "validate-data",
      "name": "Validar Dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://sua-evolution-api.com/message/sendText/INSTANCE_NAME",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "apikey",
              "value": "{{ $env.EVOLUTION_API_KEY }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "{{ $json.telefone }}"
            },
            {
              "name": "text",
              "value": "{{ $json.mensagem }}"
            }
          ]
        },
        "options": {}
      },
      "id": "evolution-api",
      "name": "Evolution API - Enviar Mensagem",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Processar resposta da Evolution API\nconst response = $input.first().json;\nconst originalData = $('Validar Dados').first().json;\n\n// Verificar se a mensagem foi enviada com sucesso\nif (response.status === 'success' || response.key) {\n  return {\n    json: {\n      success: true,\n      message: 'Mensagem enviada com sucesso',\n      messageId: response.key?.id || response.id,\n      tarefa: originalData.tarefa,\n      funcionario: originalData.funcionario,\n      telefone: originalData.telefone,\n      timestamp: originalData.timestamp,\n      evolutionResponse: response\n    }\n  };\n} else {\n  throw new Error(`Erro ao enviar mensagem: ${response.message || 'Resposta inválida'}`);\n}"
      },
      "id": "process-response",
      "name": "Processar Resposta",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}",
        "options": {}
      },
      "id": "success-response",
      "name": "Resposta de Sucesso",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"error\": \"{{ $json.message || 'Erro desconhecido' }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\"\n}",
        "options": {}
      },
      "id": "error-response",
      "name": "Resposta de Erro",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 500]
    },
    {
      "parameters": {
        "jsCode": "// Log da mensagem enviada para auditoria\nconst data = $input.first().json;\n\n// Aqui você pode implementar:\n// - Salvar no banco de dados\n// - Enviar para sistema de logs\n// - Notificar administradores\n// - Atualizar status da tarefa\n\nconsole.log('WhatsApp enviado:', {\n  tarefa: data.tarefa.titulo,\n  funcionario: data.funcionario?.nome,\n  telefone: data.telefone,\n  messageId: data.messageId,\n  timestamp: data.timestamp\n});\n\nreturn data;"
      },
      "id": "audit-log",
      "name": "Log de Auditoria",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 300]
    }
  ],
  "connections": {
    "Webhook WhatsApp": {
      "main": [
        [
          {
            "node": "Validar Dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validar Dados": {
      "main": [
        [
          {
            "node": "Evolution API - Enviar Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Evolution API - Enviar Mensagem": {
      "main": [
        [
          {
            "node": "Processar Resposta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Processar Resposta": {
      "main": [
        [
          {
            "node": "Resposta de Sucesso",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Resposta de Sucesso": {
      "main": [
        [
          {
            "node": "Log de Auditoria",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-10T10:00:00.000Z",
      "updatedAt": "2024-01-10T10:00:00.000Z",
      "id": "whatsapp-webhook",
      "name": "WhatsApp"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-10T10:00:00.000Z",
  "versionId": "1"
}

